- name: Download RHEL ISO Package
  hosts: localhost
  vars_files:
    - lab_vars.yml
  tasks:
    - name: Include package downloader role
      ansible.builtin.include_role:
        name: package-downloader
      vars:
        rh_product_filename: rhel.iso
        rh_product_checksum: "{{ checksum.rhel8 if ( rhel_version | int == 8 ) else checksum.rhel9 }}"
        rh_api_offline_token: "{{ offline_token }}"
      when: offline_token is defined and offline_token != ""

- name: This play provisions VMs for RHEL demos
  hosts: localhost
  become: true
  vars_files:
    - lab_vars.yml
  tasks:
    - name: Testing role
      ansible.builtin.include_role:
      vars:
        host_modules: "{{ modules }}"

    - name: Provision all terraform resources
      community.general.terraform:
        project_path: "terraform/"
        force_init: true
        variables:
          network_cidr: ' ["{{ network_cidr }}"]'
        state: present

    - name: Add Local resolver for the domain
      ansible.builtin.copy:
        content: server=/rhel.labs/{{ network_cidr | next_nth_usable(1) }}
        dest: /etc/NetworkManager/dnsmasq.d/rhel.conf
        mode: 0755
      become: true

    - name: Restart NetworkManager to reload config
      ansible.builtin.service:
        name: NetworkManager
        state: restarted

    - name: Add servers to inventory
      ansible.builtin.add_host:
        hostname: "{{ item.hostname }}.{{ domain }}"
        ansible_user: sysadmin
        ansible_ssh_pass: redhat
        ansible_ssh_common_args: '-o StrictHostKeyChecking=no'
        groups:
          - "servers"
      loop: "{{ modules }}"

    - name: Ensure to clean known_hosts
      ansible.builtin.known_hosts:
        host: "{{ item.hostname }}.{{ domain }}"
        path: ~/.ssh/known_hosts
        state: absent
      loop: "{{ modules }}"
      become: false

- name: Check connection to servers
  hosts: servers
  gather_facts: false
  tasks:
    - name: Waiting for installation to end, it can take time!
      ansible.builtin.wait_for_connection:
        timeout: 1800
        sleep: 120

    - name: Ping host to check status
      ansible.builtin.ping:

    - name: Setup is ready
      ansible.builtin.debug:
        msg: "Setup completed, now you can proceed with post install steps"
